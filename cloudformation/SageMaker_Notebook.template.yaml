AWSTemplateFormatVersion: "2010-09-09"
Description: "Basic SageMaker Notebook Setup for Netography Takehome Assignment."

Parameters:
  GithubSecretArn:
    Description: ARN of the secret containing the Github token
    Type: String
    Default: arn:aws:secretsmanager:eu-north-1:087121496299:secret:rjurney/github/personal_access_token/netography-DD6Stg
    ConstraintDescription: must be a valid ARN

  NotebookInstanceType:
    Description: Notebook instance type
    Type: String
    Default: ml.g4dn.2xlarge
    AllowedValues:
      - ml.r5.xlarge
      - ml.r5.2xlarge
      - ml.r5.4xlarge
      - ml.g4dn.xlarge
      - ml.g4dn.2xlarge
      - ml.g4dn.4xlarge
      - ml.g4dn.8xlarge
      - ml.g4dn.16xlarge

# SageMaker Resources
Resources:
  NotebookS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "netography-sagemaker-bucket"
      AccessControl: Private
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Network
          Value: Private

  DefaultRepository:
    Type: AWS::SageMaker::CodeRepository
    Properties:
      CodeRepositoryName: defaultRepo
      GitConfig:
        RepositoryUrl: https://github.com/rjurney/netography
        SecretArn: !Ref GithubSecretArn

  BasicNotebookInstanceLifecycleConfig:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      NotebookInstanceLifecycleConfigName: stopidle
      OnStart:
        - Content:
            Fn::Base64: |
              #!/bin/bash

              set -e

              # OVERVIEW
              # This part of the script stops a SageMaker notebook once it's idle for more than 1 hour (default time)
              # You can change the idle time for stop using the environment variable below.
              # If you want the notebook the stop only if no browsers are open, remove the --ignore-connections flag
              #
              # Note that this script will fail if either condition is not met
              #   1. Ensure the Notebook Instance has internet connectivity to fetch the example config
              #   2. Ensure the Notebook Instance execution role permissions to SageMaker:StopNotebookInstance to stop the notebook 
              #       and SageMaker:DescribeNotebookInstance to describe the notebook.
              #

              # PARAMETERS
              IDLE_TIME=3600

              echo "Fetching the autostop script"
              wget https://raw.githubusercontent.com/aws-samples/amazon-sagemaker-notebook-instance-lifecycle-config-samples/master/scripts/auto-stop-idle/autostop.py

              echo "Starting the SageMaker autostop script in cron"

              (crontab -l 2>/dev/null; echo "*/5 * * * * /usr/bin/python $PWD/autostop.py --time $IDLE_TIME --ignore-connections") | crontab -

              # OVERVIEW
              # This part of the script sets username and email address in Git config

              # PARAMETERS
              YOUR_USER_NAME="rjurney"
              YOUR_EMAIL_ADDRESS="russell.jurney@gmail.com"

              sudo -u ec2-user -i <<EOF

              git config --global user.name "$YOUR_USER_NAME"
              git config --global user.email "$YOUR_EMAIL_ADDRESS"

  ExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "sagemaker-notebook-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "sagemaker-notebook-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cloudwatch:PutMetricData"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:CreateLogGroup"
                  - "logs:DescribeLogStreams"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:ListBucket"
                Resource:
                  - !GetAtt NotebookS3Bucket.Arn

  SageMakerNotebook:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      DefaultCodeRepository: !GetAtt DefaultRepository.CodeRepositoryName
      DirectInternetAccess: Enabled
      InstanceType: ml.g4dn.2xlarge
      NotebookInstanceName: netography-notebook
      RoleArn: !GetAtt ExecutionRole.Arn
      VolumeSizeInGB: 64
      LifecycleConfigName: !GetAtt BasicNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName
      RootAccess: Enabled
